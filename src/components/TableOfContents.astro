---
import { getHeadings } from "astro:content";

const { headings } = Astro.props;

function buildTree(headings) {
    const root = [];
    const stack = [{ level: 0, children: root, number: "" }];

    for (let i = 0; i < headings.length; i++) {
        const heading = headings[i];

        while (
            stack.length > 1 &&
            stack[stack.length - 1].level >= heading.depth
        ) {
            stack.pop();
        }

        const parent = stack[stack.length - 1];
        const number = parent.children.length + 1;
        const fullNumber = parent.number
            ? `${parent.number}.${number}`
            : `${number}`;

        const node = { ...heading, children: [], number: fullNumber };
        parent.children.push(node);
        stack.push({ ...node, level: heading.depth });
    }

    return root;
}

const tocTree = buildTree(headings);
---

<div x-data="{ open: true, mobileOpen: false }">
    <div
        class="hidden xl:flex fixed left-6 top-28 w-72 h-auto bg-mantle rounded-md border border-accent/40 shadow-md flex-col font-space py-2 gap-y-2 transition-all"
        x-show="open"
    >
        <span
            class="text-accent hover:text-accent text-lg font-space text-center font-bold cursor-pointer select-none"
            @click="open = false"
        >
            Table of Contents
        </span>
        <ul class="pl-2 list-none">
            {
                tocTree.map((item) => (
                    <li class="pl-2 text-lg font-bold mt-2 first:mt-0">
                        <a
                            href={`#${item.slug}`}
                            class="text-grey hover:underline hover:text-accent transition"
                        >
                            {item.number}. {item.text}
                        </a>
                        {item.children.length > 0 && (
                            <ul class="ml-4 pl-4 border-l-2 border-accent/40 py-1 space-y-2 text-base font-normal mt-2">
                                {item.children.map((subItem) => (
                                    <li>
                                        <a
                                            href={`#${subItem.slug}`}
                                            class="text-grey hover:underline"
                                        >
                                            {subItem.number}. {subItem.text}
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        )}
                    </li>
                ))
            }
        </ul>
    </div>

    <button
        class="hidden xl:block fixed left-6 top-28 w-8 h-8 bg-mantle rounded-md border border-accent/40 shadow-md text-grey text-sm hover:text-accent transition"
        x-show="!open"
        @click="open = true"
    >
        ðŸ“–
    </button>

    <button
        class="xl:hidden fixed bottom-6 left-6 w-12 h-12 bg-mantle rounded-full border border-accent/40 shadow-md flex items-center justify-center text-grey text-2xl hover:text-accent transition"
        @click="mobileOpen = true"
    >
        ðŸ“œ
    </button>

    <div
        class="xl:hidden fixed bottom-6 left-6 max-w-full bg-mantle rounded-md border border-accent/40 shadow-md p-4 overflow-auto transition-all"
        x-show="mobileOpen"
        @click.outside="mobileOpen = false"
    >
        <button
            class="absolute top-2 right-2 text-grey hover:text-accent"
            @click="mobileOpen = false"
        >
            âœ–
        </button>
        <ul class="list-none max-w-full whitespace-nowrap truncate">
            {
                tocTree.map((item) => (
                    <li class="text-lg font-bold mt-2 first:mt-0">
                        <a
                            href={`#${item.slug}`}
                            class="text-grey hover:underline hover:text-accent transition"
                            @click="mobileOpen = false"
                        >
                            {item.number}. {item.text}
                        </a>
                        {item.children.length > 0 && (
                            <ul class="ml-4 pl-4 border-l-2 border-accent/40 py-1 space-y-2 text-base font-normal mt-2">
                                {item.children.map((subItem) => (
                                    <li>
                                        <a
                                            href={`#${subItem.slug}`}
                                            class="text-grey hover:underline"
                                            @click="mobileOpen = false"
                                        >
                                            {subItem.number}. {subItem.text}
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        )}
                    </li>
                ))
            }
        </ul>
    </div>
</div>
